// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagedWafRules(args: GetManagedWafRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedWafRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netlify:index/getManagedWafRules:getManagedWafRules", {
        "teamId": args.teamId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagedWafRules.
 */
export interface GetManagedWafRulesArgs {
    teamId: string;
}

/**
 * A collection of values returned by getManagedWafRules.
 */
export interface GetManagedWafRulesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ruleSets: {[key: string]: outputs.GetManagedWafRulesRuleSets};
    readonly teamId: string;
}
export function getManagedWafRulesOutput(args: GetManagedWafRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedWafRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netlify:index/getManagedWafRules:getManagedWafRules", {
        "teamId": args.teamId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagedWafRules.
 */
export interface GetManagedWafRulesOutputArgs {
    teamId: pulumi.Input<string>;
}
