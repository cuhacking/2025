// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model UserInformation {
    id              String   @id @default(cuid())
    // MLH Fields
    email           String?   @unique
    first_name      String?
    last_name       String?
    levels_of_study String?
    major           String?
    date_of_birth   DateTime?
    gender          String?
    phone_number    String?
    school          String?
    // Other Fields
    user            User?     @relation(fields: [userId], references: [id])
    userId          String    @unique
}

// NEXT AUTH REQUIREMENTS //
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String? 
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? 
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    userInformation     UserInformation?    @relation
    userInformationId   String?              @unique
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
