// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DnsZoneDomain {
    autoRenew?: pulumi.Input<boolean>;
    autoRenewAt?: pulumi.Input<string>;
    expiresAt?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    registeredAt?: pulumi.Input<string>;
    renewalPrice?: pulumi.Input<string>;
}

export interface EnvironmentVariableSecretValue {
    /**
     * One of all, dev, branch-deploy, deploy-preview, production, or branch
     */
    context: pulumi.Input<string>;
    contextParameter?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentVariableValue {
    /**
     * One of all, dev, branch-deploy, deploy-preview, production, or branch
     */
    context: pulumi.Input<string>;
    contextParameter?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogDrainServiceConfig {
    authorizationHeader?: pulumi.Input<string>;
    bucketName?: pulumi.Input<string>;
    bucketRegion?: pulumi.Input<string>;
    integrationName?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    url?: pulumi.Input<string>;
    verificationFilename?: pulumi.Input<string>;
}

export interface SiteFirewallTrafficRulesPublished {
    /**
     * One of allow or deny
     */
    defaultAction: pulumi.Input<string>;
    geoExceptions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesPublishedGeoException>[]>;
    geoRestrictions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesPublishedGeoRestriction>[]>;
    ipExceptions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesPublishedIpException>[]>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesPublishedIpRestriction>[]>;
}

export interface SiteFirewallTrafficRulesPublishedGeoException {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SiteFirewallTrafficRulesPublishedGeoRestriction {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SiteFirewallTrafficRulesPublishedIpException {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface SiteFirewallTrafficRulesPublishedIpRestriction {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface SiteFirewallTrafficRulesUnpublished {
    /**
     * One of allow or deny
     */
    defaultAction: pulumi.Input<string>;
    geoExceptions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesUnpublishedGeoException>[]>;
    geoRestrictions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesUnpublishedGeoRestriction>[]>;
    ipExceptions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesUnpublishedIpException>[]>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.SiteFirewallTrafficRulesUnpublishedIpRestriction>[]>;
}

export interface SiteFirewallTrafficRulesUnpublishedGeoException {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SiteFirewallTrafficRulesUnpublishedGeoRestriction {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SiteFirewallTrafficRulesUnpublishedIpException {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface SiteFirewallTrafficRulesUnpublishedIpRestriction {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface TeamFirewallTrafficRulesPublished {
    /**
     * One of allow or deny
     */
    defaultAction: pulumi.Input<string>;
    geoExceptions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesPublishedGeoException>[]>;
    geoRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesPublishedGeoRestriction>[]>;
    ipExceptions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesPublishedIpException>[]>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesPublishedIpRestriction>[]>;
}

export interface TeamFirewallTrafficRulesPublishedGeoException {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TeamFirewallTrafficRulesPublishedGeoRestriction {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TeamFirewallTrafficRulesPublishedIpException {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface TeamFirewallTrafficRulesPublishedIpRestriction {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface TeamFirewallTrafficRulesUnpublished {
    /**
     * One of allow or deny
     */
    defaultAction: pulumi.Input<string>;
    geoExceptions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesUnpublishedGeoException>[]>;
    geoRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesUnpublishedGeoRestriction>[]>;
    ipExceptions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesUnpublishedIpException>[]>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamFirewallTrafficRulesUnpublishedIpRestriction>[]>;
}

export interface TeamFirewallTrafficRulesUnpublishedGeoException {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TeamFirewallTrafficRulesUnpublishedGeoRestriction {
    countries: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    subregions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface TeamFirewallTrafficRulesUnpublishedIpException {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface TeamFirewallTrafficRulesUnpublishedIpRestriction {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
}

export interface WafPolicyRuleSet {
    /**
     * Thresholds for each category, e.g. fixation, injection-generic, injection-java, injection-php, lfi, protocol, rce, reputation-scanner, rfi, sqli, ssrf, xss
     */
    categoryThresholds?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    excludedPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The managed ID of the rule set. Currently, only crs-basic is supported.
     */
    managedId: pulumi.Input<string>;
    /**
     * Recommended default value is 5
     */
    overallThreshold: pulumi.Input<number>;
    passiveMode: pulumi.Input<boolean>;
    ruleOverrides?: pulumi.Input<{[key: string]: pulumi.Input<inputs.WafPolicyRuleSetRuleOverrides>}>;
}

export interface WafPolicyRuleSetRuleOverrides {
    /**
     * log_only or none
     */
    action: pulumi.Input<string>;
}
